{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/MessageValue/MessageValue.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","MessageItem","props","path","id","className","s","message_name","message_img","src","image","alt","message_link","to","name","MessageValue","message_val","message","Textarea","Element","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","send_message","onSubmit","handleSubmit","message_form","Field","component","validate","required","message_textarea","button_send","Dialogs","arrName","state","messageName","map","el","arrMessage","messageDate","message_title","message_rows","columns","formData","addMessage","textarea","compose","connect","messagePage","dispatch","text","addMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,QAAU,yBAAyB,aAAe,8BAA8B,YAAc,6BAA6B,aAAe,8BAA8B,YAAc,6BAA6B,YAAc,6BAA6B,iBAAmB,kCAAkC,aAAe,gC,2FCelXC,EAZM,SAACC,GAEpB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACE,sBAAKC,UAAWC,IAAEC,aAAlB,UACE,qBAAKF,UAAWC,IAAEE,YAAlB,SAA+B,qBAAKC,IAAKP,EAAMQ,MAAOC,IAAI,OAC1D,cAAC,IAAD,CAASN,UAAWC,IAAEM,aAAcC,GAAIV,EAAxC,SAA+CD,EAAMY,WCJ5CC,EAJO,SAACb,GACrB,OAAO,qBAAKG,UAAWC,IAAEU,YAAlB,SAAgCd,EAAMe,W,kCCIzCC,EAAWC,YAAQ,YAEnBC,EAAcC,cA6CdC,EAAmBC,YAAU,CACjCC,KAAM,eADiBD,EA1CL,SAACrB,GACnB,OACE,qBAAKG,UAAWC,IAAEmB,aAAlB,SACE,uBAAMC,SAAUxB,EAAMyB,aAActB,UAAWC,IAAEsB,aAAjD,UACE,cAACC,EAAA,EAAD,CAAOC,UAAWZ,EAAUJ,KAAK,WAAWiB,SAAU,CAACC,IAASZ,GAAcf,UAAWC,IAAE2B,mBAC3F,wBAAQ5B,UAAWC,IAAE4B,YAArB,kCA0COC,EApCC,SAACjC,GACf,IAAMkC,EAAUlC,EAAMmC,MAAMC,YAAYC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAa1B,KAAM0B,EAAG1B,KAAMJ,MAAO8B,EAAG9B,MAAON,GAAIoC,EAAGpC,IAASoC,EAAGpC,OAC5GqC,EAAavC,EAAMmC,MAAMK,YAAYH,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAcvB,QAASuB,EAAGvB,SAAcuB,EAAGpC,OAWhG,OACE,sBAAKC,UAAWC,IAAEW,QAAlB,UACE,qBAAKZ,UAAWC,IAAEqC,cAAlB,sBACA,sBAAKtC,UAAWC,IAAEsC,aAAlB,UACE,qBAAKvC,UAAWC,IAAEuC,QAAlB,SACGT,IAEH,qBAAK/B,UAAWC,IAAEuC,QAAlB,SACGJ,OAIL,cAACnB,EAAD,CAAkBI,SArBH,SAACoB,GAClB5C,EAAM6C,WAAWD,EAASE,iB,yBCRfC,sBACbC,aAdoB,SAACb,GACrB,MAAO,CACLA,MAAOA,EAAMc,gBAGQ,SAACC,GACxB,MAAO,CACLL,WAAY,SAACM,GACXD,EAASE,YAAwBD,SAOrCE,IAFaN,CAGbd","file":"static/js/4.1a2c95bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_rows\":\"Dialogs_message_rows__aPtlQ\",\"columns\":\"Dialogs_columns__fkfaY\",\"message_name\":\"Dialogs_message_name__1j-ou\",\"message_val\":\"Dialogs_message_val__18cSe\",\"message_link\":\"Dialogs_message_link__1BRM9\",\"message_img\":\"Dialogs_message_img__3_uH3\",\"button_send\":\"Dialogs_button_send__3v4u9\",\"message_textarea\":\"Dialogs_message_textarea__2tHAp\",\"message_form\":\"Dialogs_message_form__2UVqv\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst  MessageItem = (props) => {\r\n  \r\n  const path = \"/message/\" + props.id\r\n\r\n  return (\r\n    <div className={s.message_name}>\r\n      <div className={s.message_img}><img src={props.image} alt=\"\"/></div>\r\n      <NavLink className={s.message_link} to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst  MessageValue = (props) => {\r\n  return <div className={s.message_val}>{props.message}</div>\r\n}\r\n\r\nexport default MessageValue","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport MessageItem from './MessageItem/MessageItem'\r\nimport MessageValue from './MessageValue/MessageValue'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport Element from '../../assets/formControls/formControls'\r\nimport { maxLengthCreator, required } from '../utils/validator/validator'\r\n\r\nconst Textarea = Element('textarea')\r\n\r\nconst maxLength50 = maxLengthCreator()\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n  return (\r\n    <div className={s.send_message}>\r\n      <form onSubmit={props.handleSubmit} className={s.message_form}>\r\n        <Field component={Textarea} name='textarea' validate={[required,maxLength50]} className={s.message_textarea} />\r\n        <button className={s.button_send}>Send Message</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n  const arrName = props.state.messageName.map(el => <MessageItem name={el.name} image={el.image} id={el.id} key={el.id} />)\r\n  const arrMessage = props.state.messageDate.map(el => <MessageValue message={el.message} key={el.id} />)\r\n\r\n  const addMessage = (formData) => {\r\n    props.addMessage(formData.textarea)\r\n  }\r\n\r\n  // РЕАЛИЗАЦИЯ FLUX - АРХИТЕКТУРЫ \r\n  // const updateMessage = () => {\r\n  //   const message = newSendMessage.current.value\r\n  //   props.updateMessage(message)\r\n  // }\r\n  return (\r\n    <div className={s.message}>\r\n      <div className={s.message_title}>Messages</div>\r\n      <div className={s.message_rows}>\r\n        <div className={s.columns}>\r\n          {arrName}\r\n        </div>\r\n        <div className={s.columns}>\r\n          {arrMessage}\r\n        </div>\r\n      </div>\r\n      {/* ниже */}\r\n      <DialogsReduxForm onSubmit={addMessage}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n  form: 'dialogsForm',\r\n})(DialogsForm)\r\n\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { addMessageActionCreator } from '../../redux/message-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.messagePage\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (text) => {\r\n      dispatch(addMessageActionCreator(text))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n\r\n// let DialogsContainer =  connect(mapStateToProps,mapDispatchToProps)(AuthRedirectComponent)\r\n\r\n// export default DialogsContainer"],"sourceRoot":""}